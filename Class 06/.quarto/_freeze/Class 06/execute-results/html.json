{
  "hash": "acb82ac3183a282d511f4b04e87fd6d4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Class 06\"\n---\n\n\n\n## Quarto\n\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 + 1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n:::\n\n\nMy first function :-)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadd <- function (x, y=1:10) {\n  \n  x+y\n  \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nadd(1,1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n\n```{.r .cell-code}\nadd(x=1, y=100)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 101\n```\n\n\n:::\n\n```{.r .cell-code}\nadd(c(100,1,100),1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 101   2 101\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nadd(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 11 12 13 14 15 16 17 18 19 20\n```\n\n\n:::\n\n```{.r .cell-code}\nadd(10,10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 20\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nadd(1,1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n:::\n\n\n\nWrite a function to generate DNA that makes a random nucleotide of any seq \n\nNucleotide Function \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## generate_DNA <- function() {\n\nbases <- c(\"A\", \"C\", \"G\", \"T\")\n\nsample(bases, size=5, replace = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"T\" \"T\" \"A\" \"G\" \"G\"\n```\n\n\n:::\n:::\n\n\n\nThan is my wee working snipet, now I can make it into a function.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngenerate_dna <- function(lenght) {\nbases <- c(\"A\", \"C\", \"G\", \"T\")\nsequence <- sample(bases, size=lenght, replace = TRUE)\n\nreturn(sequence)\n  \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngenerate_dna()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"C\" \"C\" \"A\" \"T\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbio3d::aa.table\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    aa3 aa1    mass       formula                             name\nALA ALA   A  71.078    C3 H5 N O1                          Alanine\nARG ARG   R 157.194  C6 H13 N4 O1                         Arginine\nASN ASN   N 114.103   C4 H6 N2 O2                       Asparagine\nASP ASP   D 114.079    C4 H4 N O3                    Aspartic Acid\nCYS CYS   C 103.143  C3 H5 N O1 S                          Cystein\nGLN GLN   Q 117.126   C4 H9 N2 O2                        Glutamine\nGLU GLU   E 128.106    C5 H6 N O3                    Glutamic Acid\nGLY GLY   G  57.051    C2 H3 N O1                          Glycine\nHIS HIS   H 137.139   C6 H7 N3 O1                        Histidine\nILE ILE   I 113.158   C6 H11 N O1                       Isoleucine\nLEU LEU   L 113.158   C6 H11 N O1                          Leucine\nLYS LYS   K 129.180  C6 H13 N2 O1                           Lysine\nMET MET   M 131.196  C5 H9 N O1 S                       Methionine\nPHE PHE   F 147.174    C9 H9 N O1                    Phenylalanine\nPRO PRO   P  97.115    C5 H7 N O1                          Proline\nSER SER   S  87.077    C3 H5 N O2                           Serine\nTHR THR   T 101.104    C4 H7 N O2                        Threonine\nTRP TRP   W 186.210 C11 H10 N2 O1                       Tryptophan\nTYR TYR   Y 163.173    C9 H9 N O2                         Tyrosine\nVAL VAL   V  99.131    C5 H9 N O1                           Valine\nABA ABA   X  85.104   C4 H7 N1 O1          alpha-aminobutyric acid\nASH ASH   D 115.087    C4 H5 N O3            Aspartic acid Neutral\nCIR CIR   R 157.170  C6 H11 N3 O2                       citrulline\nCME CME   C 179.260 C5 H9 N O2 S2 s,s-(2-hydroxyethyl)thiocysteine\nCMT CMT   C 115.154  C4 H5 N O1 S                 o-methylcysteine\nCSD CSD   C 134.134  C3 H4 N O3 S          s-cysteinesulfinic acid\nCSO CSO   C 119.142  C3 H5 N O2 S                s-hydroxycysteine\nCSW CSW   C 135.142  C3 H5 N O3 S               cysteine-s-dioxide\nCSX CSX   C 119.142  C3 H5 N O2 S                   s-oxy cysteine\nCYM CYM   C 102.135  C3 H4 N O1 S                 Cystein Negative\nCYX CYX   C 102.135  C3 H4 N O1 S                   Cystein SSbond\nDDE DDE   H 280.346 C13 H22 N5 O2                      diphthamide\nGLH GLH   E 129.114    C5 H7 N O3           Glutatmic acid Neutral\nHID HID   H 137.139   C6 H7 N3 O1                        Histidine\nHIE HIE   H 137.139   C6 H7 N3 O1                        Histidine\nHIP HIP   H 138.147   C6 H8 N3 O1               Histidine Positive\nHSD HSD   H 137.139   C6 H7 N3 O1                        Histidine\nHSE HSE   H 137.139   C6 H7 N3 O1                        Histidine\nHSP HSP   H 138.147   C6 H8 N3 O1               Histidine Positive\nIAS IAS   D 115.087    C4 H5 N O3                    beta-aspartyl\nKCX KCX   K 172.182  C7 H12 N2 O3        lysine nz-carboxylic acid\nLYN LYN   K 129.180  C6 H13 N2 O1                   Lysine Neutral\nMHO MHO   M 147.195  C5 H9 N O2 S                  s-oxymethionine\nMLY MLY   K 156.225  C8 H16 N2 O1                n-dimethyl-lysine\nMSE MSE   M 178.091 C5 H9 N O1 SE                 selenomethionine\nOCS OCS   C 151.141  C3 H5 N O4 S            cysteinesulfonic acid\nPFF PFF   F 165.164  C9 H8 F N O1         4-fluoro-l-phenylalanine\nPTR PTR   Y 243.153 C9 H10 N O5 P                o-phosphotyrosine\nSEP SEP   S 167.057  C3 H6 N O5 P                    phosphoserine\nTPO TPO   T 181.084  C4 H8 N O5 P                 phosphothreonine\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\naa <-unique(bio3d::aa.table$aa1) [1:20]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngenerate_protein <- function(length) {\n  aa <-unique(bio3d::aa.table$aa1) [1:20]\n  sequence <- sample(aa, size=length, replace = TRUE)\n  return(sequence)\n  \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngenerate_protein(5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"F\" \"Y\" \"W\" \"R\" \"M\"\n```\n\n\n:::\n:::\n\n\n\n\nGenerate randowm protein sequences of length 6 to 12 \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsapply(6:12, generate_protein)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"Q\" \"F\" \"Y\" \"P\" \"S\" \"A\"\n\n[[2]]\n[1] \"P\" \"P\" \"P\" \"M\" \"I\" \"G\" \"F\"\n\n[[3]]\n[1] \"M\" \"Y\" \"R\" \"R\" \"N\" \"T\" \"C\" \"V\"\n\n[[4]]\n[1] \"V\" \"R\" \"K\" \"Q\" \"Q\" \"I\" \"R\" \"K\" \"P\"\n\n[[5]]\n [1] \"Q\" \"Q\" \"N\" \"D\" \"K\" \"Y\" \"F\" \"Q\" \"D\" \"G\"\n\n[[6]]\n [1] \"M\" \"L\" \"S\" \"L\" \"D\" \"G\" \"L\" \"T\" \"S\" \"M\" \"V\"\n\n[[7]]\n [1] \"L\" \"G\" \"E\" \"N\" \"M\" \"N\" \"P\" \"T\" \"V\" \"R\" \"V\" \"W\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npaste(c(\"barry\", \"Claire\", \"Chandra\"), \"Loves R\", sep=\"\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"barryLoves R\"   \"ClaireLoves R\"  \"ChandraLoves R\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngenerate_protein <- function(length) {\n  aa <-unique(bio3d::aa.table$aa1) [1:20]\n  sequence <- sample(aa, size=length, replace = TRUE)\n  sequence <- paste(sequence, collapse = \"\")\n  return(sequence)\n  \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngenerate_protein(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"WDYVGPYSEI\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nanswer <- sapply(6:12, generate_protein)\nanswer\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"FTTMHL\"       \"YCVTGII\"      \"EIPLTKAY\"     \"MYYQLCIIQ\"    \"SGWITCYIQQ\"  \n[6] \"MTSHAAELPEW\"  \"FPNPPPQWETSK\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(paste(\">id.\", 6:12, \"\\n\", answer, sep=\"\"), sep =\"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n>id.6\nFTTMHL\n>id.7\nYCVTGII\n>id.8\nEIPLTKAY\n>id.9\nMYYQLCIIQ\n>id.10\nSGWITCYIQQ\n>id.11\nMTSHAAELPEW\n>id.12\nFPNPPPQWETSK\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}